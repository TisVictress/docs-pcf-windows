---
title: Using the Stemcell Automation Tool for 1709 Stemcells
owner: Windows
---

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
     }
</style>

This topic describes how to  use the Stemcell Automation tool to build Windows Server version 1709 stemcells. 

Pivotal Application Service (PAS) v2.1 and v2.2 needs this stemcell to create VMs on vSphere.

##<a id='compatibility-matrix'></a> Compatibility Matrix

Review the following table for information about version compatibility.

<table>
	<tr>
		<th>Windows Server version</th>
		<th>Stemcell Automation Release Version</th>
		<th>Stemcell Version</th>
	</tr>
	<tr>
		<td>1709</td>
		<td>0.6</td>
		<td>1709.16</td>
	</tr>
	<tr>
		<td>1709</td>
		<td>0.5</td>
		<td>1709.15</td>
	</tr>
	<tr>
		<td>1709</td>
		<td>0.4</td>
		<td>1709.14</td>
	</tr>
	<tr>
		<td>1709</td>
		<td>0.3</td>
		<td>1709.13</td>
	</tr>
	<tr>
		<td>1709</td>
		<td>0.2</td>
		<td>1709.11</td>
	</tr>
</table>

## <a id='prerequisites'></a> Prerequisites

* A Windows Server 1709 ISO, from MSDN or VLSC. You can use an evaluation copy for testing, but Pivotal does not recommend an evaluation copy for production, as the licensing expires.
	<p class="note"><strong>Note</strong>: Pivotal recommends maintaining a separate, updated Windows VM based on this ISO to serve as the basis for the installation steps below. This enables you to apply Windows Updates and create new stemcells without having to reinstall all updates from scratch.</p>
* Access to a vSphere account.

### <a id='local'></a>Files on Local Machine

As part of completing the procedures in this topic, you download the following files onto your local machine:

* The latest release of [stembuild](https://github.com/pivotal-cf-experimental/stembuild/releases).
* [ovftool](https://www.vmware.com/support/developer/ovf/). 

### <a id='windows-vm'></a>Files on Windows VM

As part of completing the procedures in this topic, you download the following files onto your Windows VM:

* [lgpo.exe](https://www.microsoft.com/en-us/download/details.aspx?id=55319) from the Microsoft Security Toolkit.
* [Stemcell Automation](https://network.pivotal.io/products/stemcells-windows-server/) tool from Pivotal Network. Refer to the [Compatibility Matrix](#compatibility-matrix) above to determine which version of the tool you need.
	<p class="note"><strong>Note</strong>: You must choose a stemcell version to build. Stemcells are versioned as MAJOR.MINOR, such as 1709.11. For more information about 1709 stemcells, see the <a href="https://docs.pivotal.io/pivotalcf/2-2/stemcells/windows-stemcell-v1709x.html">Stemcell v1709.x (Windows Server version 1709) Release Notes</a>.</p>

##<a id='create-base-vm'></a> Step 1: Create Base VM for Stemcell

###<a id='upload-windows-iso'></a>Upload the Windows ISO

Perform the following steps to upload the Windows ISO:

1. Log in to vCenter.
1. Click **Storage** in the vCenter menu.
1. Choose a datastore and click on (or create) the directory where you want the Windows ISO.
1. Click **Upload a file to datastore**, and upload the Windows ISO. 
	<p class="note"><strong>Note</strong>: You may need to install the vSphere client web plugin to upload through your browser, or <code>scp</code> the file directly to the datastore server. For more information, see the VMware vSphere <a href="https://www.vmware.com/support/pubs/vsphere-esxi-vcenter-server-pubs.html">documentation</a>.</p>

###<a id='create-customize-vm'></a>Create and Customize a New VM

Perform the following steps to create and customize a new VM:

1. If you are using an existing template, select the creation type **Deploy from template** and select a template.
1. In **Select compatibility**, select **ESXi 6.0 and later**.
1. For **Guest OS Family**, select **Windows**.
1. For **Guest OS version**, select **Windows Server 2016**.
1. In **Customize hardware**, perform the following steps:
	- Under **New Hard disk**, specify a size of 30GB or greater.
	- Under **New CD\DVD Drive**, perform the following steps:
		1. Select **Datastore ISO File**.
		1. Expand the menu and select **Connect At Power On**.
		1. Click **Browse** and select the ISO you uploaded to your datastore.

###<a id='install-windows-server'></a>Install Windows Server 

Perform the following steps to install Windows Server on the base VM:

1. After creating the VM, click **Power On** in the **Actions** tab for your VM.
1. Select **Windows Server Standard**.
1. Select **Custom installation**.
1. Complete the installation process, and enter a password for the Administrator user. BOSH will later randomize this password.

###<a id='install-vmware-tools'></a>Install VMware Tools

Perform the following steps to install VMware Tools on the base VM:

1. In the vCenter menu, click **Install VMware Tools** in the VM **Summary** tab.
1. Navigate to the D: drive and run `setup64.exe`.
	<p class="note"><strong>Note</strong>: The install window for VMware Tools may appear behind the Command Prompt window.</p>
1. Step through the installation of VMware Tools, configuring as needed.
1. Restart the VM to finish the install.

##<a id='run-windows-updates'></a> Step 2: Install Windows Updates

Install Windows updates on the Windows VM using your preferred procedure.

One way to install Windows updates on the Windows VM is by using the **SConfig** utility. Perform the following steps:

1. On the Windows VM, run the **SConfig** utility.
	<p class="note"><strong>Note</strong>: You must set up the IP, gateway, and DNS server for your Windows VM so that it can connect to the Windows Updates server. You can use the SConfig utility to set up this network configuration.</p>
1. Select option number 6, **Download and Install Updates**.
1. Select **A** for **(A)ll updates**. 
1. For the **Select an option**, select **(A)ll updates**.

You may need to reboot the Windows VM while installing updates. Check Windows Updates multiple times until there are no more updates left to install. 

###<a id='enable-meltdown-mitigation'></a> Enable Meltdown Mitigation

<p class="note warning"><strong>WARNING</strong>: You must enable Meltdown mitigation. Not enabling Meltdown mitigation can lead to timeout issues while deploying the PASW tile.</p>

Windows Server version 1709 should receive the update containing the Meltdown mitigation automatically when you install Windows updates.

After installing Windows update, ensure that the following registry keys are set to enable Meltdown mitigation:

```
reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" 
/v FeatureSettingsOverride /t REG_DWORD /d 0 /f

reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" 
/v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f

reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Virtualization" 
/v MinVmVersionForCpuBasedMitigations /t REG_SZ /d "1.0" /f

reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat" 
/f /v cadca5fe-87d3-4b96-b7fb-a231484277cc /t REG_DWORD /d 0
```

##<a id='clone-vm'></a> Step 3: Clone the VM

Clone the VM that has the Windows updates installed. Save the original VM so that you can run updates on it in the future. 

Perform the following steps:

1. In vCenter, right-click the current Windows VM
1. Select **Clone to Virtual Machine** and complete the wizard to provide the name, compute resource, and storage.
1. Ensure that you can create the VM that can be used to create a stemcell for the next Patch Tuesday Monthly Updates. 

Once you have created the clone VM, you can utilize the original VM for future stemcell creation.

##<a id='run-tool'></a> Step 4: Run the Stemcell Automation Tool

Perform the following steps to run the Stemcell Automation tool:

1. Download the Stemcell Automation tool from [Pivotal Network](https://network.pivotal.io/products/stemcells-windows-server/) to your Windows VM. Refer to the [Compatibility Matrix](#compatibility-matrix) above to determine which version of the tool you need.
	<br><br>
	If you want to download the tool directly from the internet, perform the following steps:

	1. Start PowerShell on the Windows VM.
	1. Run the following command:

		```
		[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
		```
	1. Run the following command, replacing `STEMCELL-AUTOMATION-VERSION` with the version of the Stemcell Automation tool to download based on the [compatibility matrix](#compatibility-matrix):

		```
		Invoke-WebRequest -Uri "https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-automation/releases/download/STEMCELL-AUTOMATION-VERSION/StemcellAutomation.zip" -OutFile ".\StemcellAutomation.zip -UseBasicParsing
		```

1. Start PowerShell in the Windows VM and run the following command to extract the contents of `StemcellAutomation.zip`:

	```
	Expand-Archive .\StemcellAutomation.zip
	```
1. Transfer the [`LGPO.ZIP`](https://www.microsoft.com/en-us/download/details.aspx?id=55319) file to the `StemcellAutomation` folder.
1. Begin the automation process by running the following command within the `StemcellAutomation` folder:

	```
	.\Setup.ps1 --Skip-Random-Password
	```
	By default the setup script randomizes the Administrator's password. To avoid this, and maintain access to the VM after preparation, use the `--SkipRandomPassword` flag. 
	<p class="note"><strong>Note</strong>: Stemcell Automation can take between twenty minutes and one and a half hours depending on the environment.</p>
1. The VM will reboot once and the second half of the automation process will continue. 
	<p class="note"><strong>Note</strong>: At this stage, there is no visual feedback for the process.</p> 
	<br><br>
	If you want to check the progress of the automation process after the reboot, perform the following steps:

	1. Log in to the VM and start PowerShell.
	1. Run the following command: 

		```
		Get-Content -Path "C:\provision\log.log" -Wait
		```
		
	Eventually, the VM will shut down. 

##<a id='export-vmdk'></a> Step 5: Export the VMDK File

Perform the following steps to export the .VMDK file associated with the VM you powered off:

1. In vCenter, right-click the VM and select **Template > Export to OVF Template**.
1. Download the OVA to your local machine. 
You do not need to include files in the floppy or CD Drive. 
	<p class="note"><strong>Note</strong>: You can also download the standalone vSphere client and select <strong>File > Export > Export OVF Template</strong>.</p>
1. Rename the downloaded OVA file to have a `.tar` extension. 
1. Expand the TAR archive and locate the VMDK file.

##<a id='convert-vmdk'></a> Step 6: Convert the VMDK File to a BOSH Stemcell

<p class="note"><strong>Note</strong>: This final step typically takes about ten to twenty minutes to complete.</p>

Perform the following steps to convert the VMDK file to a BOSH stemcell:

1. Download the latest release of the [stembuild](https://github.com/pivotal-cf-experimental/stembuild/releases) utility to your local machine and place the executable in your command-line path.
1. Download [`ovftool`](https://www.vmware.com/support/developer/ovf/) to your local machine and place the executable in your command-line path. 
	<p class="note"><strong>Note</strong>: On the Windows desktop, <code>ovftool</code> is installed by default in <code>C:\Program Files\VMware\VMware OVF Tool</code>.</p>

	`stembuild` invokes `ovftool` to convert the disk image to the appropriate stemcell format and apply the proper configuration.
1. Build the stemcell with the following command:

	```
	stembuild -vmdk "PATH-TO-VMDK" -stemcell-version YOUR-STEMCELL-VERSION -os 1709.11
	```

	Where:
	* `PATH-TO-VMDK` is the path to the VMDK file.
	* `YOUR-STEMCELL-VERSION` is the 1709 stemcell version you want to build. For example, `1709.11`.

	`stembuild` will create the stemcell in the directory where you execute it. The file has a `.tgz` extension and a name similar to `bosh-stemcell-1709.11-vsphere-esxi-windows2016-go_agent.tgz `.
	<br><br>
	The stemcell is ready for use in conjunction with your BOSH deployment. 

