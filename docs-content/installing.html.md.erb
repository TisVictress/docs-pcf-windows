---
title: Installing and Configuring PASW
owner: Windows
---

This topic describes how to install and configure the Pivotal Application Service for Windows (PASW) tile. 

If you have the PASW 2012 R2 tile installed, see [Migrating from PASW 2012 R2 to PASW](./upgrade-2012r2-to-pasw.html) for more information about the changes in features and functionality between the two tile versions.


## <a id='overview'></a> Overview

The PASW tile installs Windows Diego Cells in your <%= vars.product_name  %> deployment.

The PASW tile inherits settings from the Pivotal Application Service (PAS) tile and also includes additional configuration settings.

To install, configure, and deploy PASW:  

1. Complete the prerequisites. See [Prerequisite](#prerequisite).

1. Download and install the PASW tile. See [Install the Tile](#install).

1. Configure required settings for the tile. See [Configure the Tile](#config).

1. Configure resources for the tile. See [Configure Tile Resources](#resources).

1. Upload the Windows stemcell to the tile. See [Upload the Stemcell](#stemcells).

1. Deploy the tile. See [Deploy the Tile](#deploy).


## <a id='prerequisite'></a> Prerequisites

The following are requirements for installing and configuring the PASW tile.  
#### <a id='prerequisite-injector'></a> Windows FS Injector Prerequisites

Use the **Windows FS Injector** tool to install the PASW tile.  

Before using the **Windows FS Injector** tool, ensure the following:  

* Ensure the `git` and `tar` executables are in your `%PATH%`. 
If `git` and `tar` are not in your `%PATH%`, either 
add your `git` and `tar` executable locations to your existing `%PATH%` configuration, or 
copy the `git.exe` and `tar.exe` executables to a directory in your `%PATH%`.  
*  Ensure your installation environment allows the **Windows FS Injector** tool access to all of the following URLs:  
    * [network.pivotal.io](https://network.pivotal.io), for downloading the tile and injector.
    * [s3.amazonaws.com](https://s3.amazonaws.com/).
    * [auth.docker.io](https://auth.docker.io/).
    * [registry.hub.docker.com](https://registry.hub.docker.com/).
    * [https://production.cloudflare.docker.com](https://production.cloudflare.docker.com/).
    * [go.microsoft.com](https://go.microsoft.com/).
    * [https://winlayers.cdn.mscr.io](https://winlayers.cdn.mscr.io/).
    * [mcr.microsoft.com](https://mcr.microsoft.com).
    * [*.msecnd.net](https://msecnd.net), or any domain within the Microsoft Windows Azure Content Delivery Network. 
    For more information about the the Windows Azure Content Delivery Network, see 
    [Introducing the Windows Azure Content Delivery Network](https://azure.microsoft.com/en-us/blog/introducing-the-windows-azure-content-delivery-network/).
    <p class="note"><strong>Note:</strong>  To ensure the authenticity of Microsoft container images, Microsoft does not permit the distribution of its base images. 
     This includes Microsoft container images consumed through Docker Hub, which are actually delivered by a Microsoft CDN endpoint.
    </p>

#### <a id='prerequisite-tests'></a> Development and Test Environment Prerequisites
Before you install and configure the PASW tile, you must disable SSL certificate verification for all Windows Diego cells on development and testing environments.

<p class="note"><strong>Note:</strong> Only disable SSL certificate verification for development and testing environments. Do not disable SSL certificate verification for production environments.</p>

To disable SSL validation on development and testing environments:

1. In the PAS tile, select **Networking**. 

1. Enable the **Disable SSL certificate verification for this environment** checkbox. 

For more information, see the [Terminate SSL/TLS at HAProxy](https://docs.pivotal.io/platform/opsguide/ssl-term-haproxy.html#haproxy) section of _Configuring SSL/TLS Termination at HAProxy_.


## <a id='install'></a> Install the Tile

To install the PASW tile:

1. Download the **Pivotal Application Service for Windows** product file from [Pivotal Network](https://network.pivotal.io/products/pas-windows).

1. Within [Pivotal Application Service for Windows](https://network.pivotal.io/products/pas-windows), download the **Windows FS Injector** tool for your workstation OS.<br><br>
The Injector tool, `winfs-injector`, is an executable binary that adds the Windows Server container base image into the product file. This step requires internet access and can take up to 20 minutes.<br>
<p class="note"><strong>Note:</strong> You need the <code>git</code> and <code>tar</code> executables in your <code>%PATH%</code> to run <code>winfs-injector.exe</code>. For example, copy <code>git.exe</code> and <code>tar.exe</code> to a directory in your <code>%PATH%</code>.</p>

1. Add the Windows Server container base image to the product file:

    ```shell
    winfs-injector --input-tile PASW-DOWNLOAD-PATH --output-tile PASW-IMPORTABLE-PATH
    ```

    Where:
    * `PASW-DOWNLOAD-PATH` is the path and filename to the PASW product file you downloaded.
    * `PASW-IMPORTABLE-PATH` is the desired output path for the importable product file.

    For example:
    <pre class="terminal">
    C:\Users\admin\> winfs-injector --input-tile ^
    c:\temp\pas-windows-2.6.0-build.1.pivotal ^
    --output-tile c:\temp\pas-windows-2.6.0-build.1-INJECTED.pivotal
    </pre>

    For information about troubleshooting `winfs-injector`, see [Missing Local Certificates for Windows File System Injector](./troubleshooting.html#missing-certs-winfs-issues) in _Troubleshooting Windows Cells_.

1. To enable forwarding BOSH job logs to an external syslog server, add the following BOSH add-on to a `runtime_config` YAML file:

    ```yaml
    releases:
    - name: windows-syslog
      version: latest

    addons:
    - name: windows-syslog
      include:
        stemcell:
        - os: ((Stemcell OS e.g., windows2019))
      jobs:
      - name: syslog_forwarder_windows
        properties:
          syslog:
            address: ((IP address of the syslog server))
            port: ((Port of the syslog server))
            transport: ((tcp or udp))
            # Optional. If you enabled SSL certificate
            # verification in PAS, you must configure
            # `tls_enabled:` and `ca_cert:`.
            tls_enabled: true
            ca_cert: ((TLS CA certificate of the syslog server))
        release: windows-syslog
    ```

    For more information about BOSH add-ons, see [Addons Block](https://bosh.io/docs/runtime-config/#addons) in the BOSH documentation.

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product**.

1. To add the PASW tile to the **Import a Product** product list, select the importable `PASW-IMPORTABLE-PATH` file on your workstation.

1. To add the PASW tile to your staging area, click **+** under the **Pivotal Application Service for Windows** product listing.


## <a id='config'></a> Configure the Tile

The following sections describe how to configure the settings for the PASW tile.  
 
### <a id='config-azs-networks'></a> Assign Availability Zones and Networks

In the **Assign AZ and Networks** pane, you assign jobs to your Availability Zones (AZs) and networks.

1. Click the PASW tile.

1. Select **Assign AZs and Networks** or **Assign Networks**. The name of the pane varies depending on your IaaS.

1. Select the first AZ under **Place singleton jobs**. Ops Manager runs any job with a single instance in this AZ.

1. Select all AZs under **Balance other jobs**. Ops Manager balances instances of jobs with more than one instance across the AZs that you specify.
  <p class='note'><strong>Note:</strong> For production deployments, Pivotal recommends at least three AZs for a highly available installation.</p>

1. From the **Network** dropdown, choose the runtime network that you created when configuring the BOSH Director tile.

1. Click **Save**.

### <a id='config-vms'></a> Configure VMs

In the **VM Options** pane, you configure settings for accessing your VMs.

1. Select **VM Options**.

1. Select one of the following for **Manage administrator password**:
  * To randomize the admin password, select **Use random password**. If you select this option, the admin password is not retrievable by an operator. This is the default selection.
  * To set the same admin password for every Windows Diego Cell, select **Set the password** and enter a password in **Password**. If you select this option, this password can be used to access any Windows Diego Cell.

1. (Optional) To start the Microsoft beta port of the OpenSSH daemon on port 22 on all VMs, enable the **Enable BOSH-native SSH support on all VMs (beta)** checkbox. If you select this option, users can SSH into Windows VMs with the `bosh ssh` command, and enter a CMD terminal as an admin user. They can then run `powershell.exe` to start a PowerShell session.

1. (Optional) To configure a Key Management Service (KMS) that your volume-licensed Windows Diego Cell can register with:
    1. Under **Key Management Service**, select **Enable**.
    1. For the **Host** field, enter the KMS hostname.
    1. For the **Port** field, enter the port number. The default port number is 1688.

1. Click **Save**.

### <a id='config-smoke-tests'></a> Configure Smoke Tests

In the **Smoke Tests** pane, you choose where to run smoke tests. The Smoke Tests errand runs basic functionality tests against your PASW deployment after an installation or update.

1. Select **Smoke Tests**.

1. Select one of the following locations for smoke tests to run:
  * To run smoke tests in a temporary space in the default org, select **A temporary space within the system org**. PASW deletes the space after smoke tests finish.
  * To specify the org and space where smoke tests run, select **A specified org and space**. You must enter a domain available for routing and that domain must be accessible to the org. Enter the following:
      * For **Org**, enter the org you want PASW to use when running smoke tests.
      * For **Space**, enter the space you want PASW to use when running smoke tests.
      * For **Domain**, enter the domain you want PASW to use when running smoke tests.

### <a id='config-advanced-features'></a> Configure Advanced Features      

The **Advanced Features** pane includes new functionality that may have certain constraints. Although these features are fully supported, Pivotal recommends caution when using them in production environments.

#### <a id='config-memory-disk'></a>

If your apps do not use the full allocation of disk space and memory set in the **Resource Config** tab, you might want use this feature. These fields control the amount to overcommit disk and memory resources to each Diego Cell VM.

For example, you might want to use the overcommit if your apps use a small amount of disk and memory capacity compared to the amounts set in the **Resource Config** settings for **Windows Diego Cell**.

<p class="note"><strong>Note:</strong> Due to the risk of app failure and the deployment-specific nature of disk and memory use, Pivotal has no recommendation for how much, if any, memory or disk space to overcommit.</p>

To enable overcommit:

1. Select **Advanced Features**.

1. Enter in MB the total desired amount of Diego cell memory in the **Cell memory capacity** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Diego Cell memory capacity settings that this field overrides.

1. Enter in MB the total desired amount of Diego cell disk capacity in the **Cell disk capacity** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Diego Cell disk capacity settings that this field overrides.

1. Click **Save**.

<p class="note"><strong>Note:</strong> Entries made to each of these two fields set the total amount of resources allocated, not the overage.</p>

#### <a id='enable-route-integrity'></a> TLS Connections from Router to Apps (Beta)

You can choose the method the Gorouter uses to verify app identity. Verifying app identity using TLS or mutual TLS enables encryption between router and app containers and guards against misrouting during control plane failures. This feature is disabled by default.

For more information about Gorouter route consistency modes, see the [Preventing Misrouting](https://docs.pivotal.io/platform/concepts/http-routing.html#consistency) section in the _HTTP Routing_ topic.

1. Select **Advanced Features**.

1. Under **TLS connections from Router to apps (beta)**, select one of the following options:
      * To disable app identity verification and mutual TLS, select *Disable route integrity and mutual TLS*.
      * To enable the Gorouter to verify app identity using TLS, click **Router uses TLS to verify app identity**.
      * To enable the Gorouter and your apps to verify each other's identity using TLS, click **Router and apps use mutual TLS to verify each other's identity**.
      <p class='note'><strong>Note:</strong> Mutual TLS (mTLS) app identity verification does not work for Windows containers.</p>
      <p class='note'><strong>Note:</strong> To support mutual TLS app identity verification, you need v2.3 or later of both PAS and <%= vars.product_name %> Isolation Segment (IST). The Gorouter and Diego Cell components in <%= vars.product_name %> v2.2 and earlier do not support mTLS handshakes.</p>

1. Click **Save**.

### <a id='config-errands'></a> Configure Errands

Errands are scripts that Ops Manager runs automatically when it installs or uninstalls a product, such as a new version of PAS. There are two types of errands: _post-deploy errands_ run after the product is installed, and _pre-delete errands_ run before the product in uninstalled.

By default, Ops Manager always runs all errands.

In the **Errands** pane, you can change these run rules. For each errand, you can select **On** to run it always or **Off** to never run it.

For more information about how Ops Manager manages errands, see [Managing Errands in Ops Manager](https://docs.pivotal.io/platform/customizing/managing_errands.html).

1. Select **Errands**.

1. To ensure that you receive the most up-to-date HWC buildpack, set the **Install HWC Buildpack Errand** to **On**.

1. To ensure that a smoke test is run against your PASWe installation, set the **Smoke Test Errand** to **On**.

1. Click **Save**.

<p class="note"><strong>Note:</strong> This beta feature checks only that the client certificate is signed by the expected CA using mTLS. It does not include SAN (Subject Alternative Name) checks of the presented client certificates.</p>

### <a id='config-iso-segments'></a> (Optional) Configure Isolation Segments

To deploy your PASW app workloads to an isolation segment, select **App Containers** and follow the procedure in the [Assign a Tile to an Isolation Segment](./isolation.html#assign-isolation) section of _Windows Cells in Isolation Segments_.

### <a id='config-system-logging'></a> (Optional) Configure System Logging

To configure Windows Diego Cells to send Windows Event logs to an external syslog server, select **System Logging** and follow the procedure in the [Forward Windows Event Logs to a Syslog Server](./troubleshooting.html#syslog) section of _Troubleshooting Windows Cells_.


## <a id='resources'></a> Configure Tile Resources

In the **Resource Config** pane, you must associate load balancers with the VMs in your deployment to enable traffic.

To configure your tile resources:

1. Select **Resource Config**.

1. Use the dropdowns to configure **Windows Diego Cell**. See the following table for the recommended Windows Diego Cell disk size for your IaaS:
  <table>
    <tr>
      <th>IaaS</th>
      <th>Recommended Windows Diego Cell Disk Size</th>
    </tr>
    <tr>
      <th>AWS</th>
      <td>100&nbsp;GB</td>
    </tr>
    <tr>
      <th>Azure</th>
      <td>150&nbsp;GB</td>
    </tr>
    <tr>
      <th>GCP</th>
      <td>150&nbsp;GB</td>
    </tr>
    <tr>
      <th>vSphere</th>
      <td>100&nbsp;GB</td>
    </tr>
  </table>
  <p class="note"><strong>Note:</strong> Windows stemcells in the v2019.x line support ephemeral disks.</p>

1. Provision your **Master Compilation Job** with at least 100&nbsp;GB of disk space.

1. Click **Save**.


## <a id='stemcells'></a> Upload the Stemcell

To upload the stemcell:

1. In the PASW tile, select **Stemcell Library**.

1. Retrieve the stemcell that you downloaded or created in [Downloading or Creating a Windows Stemcell](./stemcells.html).

1. Follow the procedure in [Importing and Managing Stemcells](https://docs.pivotal.io/platform/opsguide/managing-stemcells.html) to upload the Windows stemcell to PASW.

<p class='note'><strong>Note:</strong> If you use vSphere, you must create your own stemcell. The default root disk size of Windows stemcells v2019.x line is 30&nbsp;GB. Pivotal recommends setting the root disk size of your Windows stemcell for vSphere to 30&nbsp;GB. For more information, see <a href="create-vsphere-stemcell-manually.html">Creating a Windows Stemcell for vSphere Manually</a> or <a href="create-vsphere-stemcell-automatically.html">Creating a Windows Stemcell for vSphere Using stembuild (Beta)</a>.</p>


## <a id='deploy'></a> Deploy the Tile

To deploy the PASW tile:

1. Go to the Ops Manager Installation Dashboard.

1. Click **Review Pending Changes**.

1. Select the PASW tile and review the changes. For more information, see [Reviewing Pending Product Changes](https://docs.pivotal.io/platform/customizing/review-pending-changes.html).

1. Click **Apply Changes**.


## <a id='copy'></a> (Optional) Create More Tiles

To run Windows Diego Cells in multiple isolation segments, you must create and configure additional PASW tiles. For more information, see [Windows Cells in Isolation Segments](./isolation.html).
