---
title: Creating a vSphere Windows Stemcell
owner: Windows
---

<strong><%= modified_date %></strong>

This topic describes how to create the stemcell that Pivotal Application Service for Windows (PASW) needs to create VMs on vSphere.

**The stemcell is based on Windows Server, version 1709.**

##<a id='overview'></a> Overview

To create a Windows stemcell for vSphere, you create a base Windows VM from a volume-licensed ISO and subsequently maintain that base template with all Windows recommended security updates, but without the BOSH dependencies.

The VM with security updates serves as the base for all future stemcells, produced from clones of that base VM. This enables you to build new stemcells without having to run Windows Updates from scratch each time. You can also use a "snapshot" feature to maintain an updated Windows image that does not contain the BOSH dependencies.

Pivotal recommends installing any available critical updates, and then rebuilding the stemcell from a clone of the original VM.

## <a id='prerequisites'></a> Prerequisites

Before you create a vSphere Windows stemcell, you must have the following:

* A Windows Server, version 1709 ISO, from [Microsoft Developer Network (MSDN)](https://msdn.microsoft.com/en-us) or [Volume Licensing Service Center (VLSC)](https://www.microsoft.com/Licensing/servicecenter/default.aspx). You can use an evaluation copy for testing, but Pivotal does not recommend an evaluation copy for production, as the licensing expires.
	<p class="note"><strong>Note</strong>: Pivotal recommends maintaining a separate, updated Windows VM based on this ISO to serve as the basis for the installation steps below. This enables you to apply Windows Updates and create new stemcells without having to reinstall all updates from scratch.</p>
* A vSphere/vCenter account granted sufficient permissions to perform all of the following tasks:
	- Create a VM.
	- Configure a VM.
	- Open a VM in VM Remote Console on a local desktop.
	- Export a VM.

* The ability to download/transfer files and software to a vCenter Windows VM.

### <a id='local'></a>Files on Local Machine

As part of completing the procedures in this topic, you download the following files to your local machine:

* The latest release of [stembuild](https://github.com/pivotal-cf-experimental/stembuild/releases).
* [ovftool](https://www.vmware.com/support/developer/ovf/).

### <a id='windows-vm'></a>Files on Windows VM

As part of completing the procedures in this topic, you download the following files to your Windows VM:

* [lgpo.exe](https://www.microsoft.com/en-us/download/details.aspx?id=55319) from the Microsoft Security Toolkit.
* [OpenSSH v7.7.2.0p1](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.2.0p1-Beta).
* The [BOSH PS Modules and BOSH Agent](https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases) for the 1709 stemcell version you want to build.
	<p class="note"><strong>Note</strong>: You must choose a stemcell version to build. Stemcells are versioned as MAJOR.MINOR, such as 1709.12. For more information about 1709 stemcells, see the <a href="https://docs.pivotal.io/pivotalcf/stemcells/windows-stemcell-v1709x.html">Stemcell v1709.x (Windows Server, version 1709) Release Notes</a>.</p>

##<a id='create-base-vm'></a> Step 1: Create Base VM for Stemcell

This section describes how to create, configure, and verify a base Windows VM
from a volume-licensed ISO.

###<a id='upload-windows-iso'></a>Upload the Windows ISO

Perform the following steps to upload the Windows ISO:

1. Log in to vCenter.
1. Click **Storage** in the vCenter menu.
1. Choose a datastore and click or create the directory where you want the Windows ISO.
1. Click **Upload a file to datastore**, and upload the Windows ISO.
	<p class="note"><strong>Note</strong>: You might need to install the vSphere client web plugin to upload through your browser, or <code>scp</code> the file directly to the datastore server. For more information, see the VMware vSphere <a href="https://www.vmware.com/support/pubs/vsphere-esxi-vcenter-server-pubs.html">documentation</a>.</p>

###<a id='create-customize-vm'></a>Create and Customize a New VM

Perform the following steps to create and customize a new VM:

1. If you are using an existing template, select the creation type **Deploy from template** and select a template.
1. In **Select compatibility**, select **ESXi 6.0 and later**.
1. For **Guest OS Family**, select **Windows**.
1. For **Guest OS version**, select **Windows Server 2016**.
1. In **Customize hardware**, perform the following steps:
	- Under **New Hard disk**, specify a size of 30GB or greater.
	- Under **New CD\DVD Drive**, perform the following steps:
		1. Select **Datastore ISO File**.
		1. Expand the menu and select **Connect At Power On**.
		1. Click **Browse** and select the ISO you uploaded to your datastore.

###<a id='install-windows-server'></a>Install Windows Server

Perform the following steps to install Windows Server on the base VM:

1. After creating the VM, click **Power On** in the **Actions** tab for your VM.
1. Select **Windows Server Standard**.
1. Select **Custom installation**.
1. Complete the installation process, and enter a password for the Administrator user. BOSH later randomizes this password.

###<a id='verify-os'></a>Verify OS

<p class="note warning"><strong>WARNING:</strong> You must complete the following procedure to verify your OS version before continuing.</p>

Ensure you are using the correct the OS version by running the following PowerShell command on the Windows VM:

```
Get-CimInstance Win32_OperatingSystem | Select-Object
Caption, Version, ServicePackMajorVersion, OSArchitecture, CSName, WindowsDirectory
```

The output includes `Version: 10.0.16299`.

###<a id='install-vmware-tools'></a>Install VMware Tools

Perform the following steps to install VMware Tools on the base VM:

1. Under the VM **Summary** tab, select **Install VMware Tools**.
1. Navigate to the `D:` drive and run `setup64.exe`.
	<p class="note"><strong>Note</strong>: The VMware Tools install window might appear behind the Command Prompt window.</p>
1. Restart the VM as required to finish the install.

##<a id='install-windows-updates'></a> Step 2: Install Windows Updates

This section describes how to install Windows updates on your base Windows VM.

###<a id='run-windows-updates'></a> Install Windows Updates

Install Windows updates on the Windows VM using your preferred procedure.

One way to install Windows updates on the Windows VM is by using the **SConfig** utility. Perform the following steps:

1. On the Windows VM, run the **SConfig** utility.
1. Select option number 6, **Download and Install Updates**.
1. Select **A** for **(A)ll updates**.
1. For the **Select an option**, select **(A)ll updates**.

You might need to restart the Windows VM while installing updates.

###<a id='enable-meltdown-mitigation'></a> Enable Meltdown Mitigation

<p class="note warning"><strong>WARNING</strong>: You must enable Meltdown mitigation. Not enabling Meltdown mitigation can lead to timeout issues while deploying the PASW tile.</p>

Windows Server, version 1709 should receive the update containing the Meltdown mitigation automatically when you install Windows updates.

After installing Windows update, ensure that the following registry keys are set to enable Meltdown mitigation:

```
reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management"
/v FeatureSettingsOverride /t REG_DWORD /d 0 /f

reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management"
/v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f

reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Virtualization"
/v MinVmVersionForCpuBasedMitigations /t REG_SZ /d "1.0" /f

reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat"
/f /v cadca5fe-87d3-4b96-b7fb-a231484277cc /t REG_DWORD /d 0
```

##<a id='clone-vm'></a> Step 3: Clone the VM

Clone the VM that has the Windows updates installed. Save the original VM so that you can run updates on it in the future.

Perform the following steps:

1. In vCenter, right-click the current Windows VM.
1. Select **Clone to Virtual Machine**.
1. Ensure that you can create the VM that can be used to create a stemcell for the next Patch Tuesday Monthly Updates.

##<a id='install-required-software'></a> Step 4: Install Required Software

You might need to specify an explicit execution policy for all of the PowerShell commands in the *Step 4: Install Required Software* section.
You specify an execution policy with the `-ExecutionPolicy` flag.

For example:

<pre class="terminal">
powershell -ExecutionPolicy Bypass -Command "Install-CFFeatures"
</pre>

###<a id='bosh-ps-modules'></a>Install the BOSH PS Modules

Perform the following steps to install the BOSH PS Modules:


1. Locate the [BOSH PS Modules](https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases) download for the 1709 stemcell version you want to build, such as 1709.12.
1. Transfer the `bosh-psmodules.zip` file to your Windows VM.
	<p class="note"><strong>Note</strong>: Use your preferred procedure for transferring files to your Windows VM. You can use folder sharing.</p>
1. Start PowerShell in the Windows VM and run the following command:

	```
	Unblock-File PATH-TO-BOSH-PSMODULES.ZIP
	```

	Where `PATH-TO-BOSH-PSMODULES.ZIP` is the full path to the location of `bosh-psmodules.zip` on your Windows VM.

1. Unzip the archive with the following command:

	```
	Expand-Archive PATH-TO-BOSH-PSMODULES.ZIP C:\Program Files\WindowsPowerShell\Modules
	```

###<a id='cf-diego-cell'></a>Install the Cloud Foundry Diego Cell Requirements

Perform the following steps to install the Cloud Foundry Diego cell requirements:

1. Start PowerShell in the Windows VM and run the following command:

	```
	Install-CFFeatures
	```

	The machine restarts automatically.

1. Apply the recommended ingress and service configuration with the following command:

	```
	Protect-CFCell
	```

###<a id='bosh-agent'></a>Install the BOSH Agent

Perform the following steps to install the BOSH Agent:

1. Locate the [BOSH Agent](https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases) download for the 1709 stemcell version you want to build, such as 1709.12.
1. Transfer the `agent.zip` file to your Windows VM.
1. Start PowerShell in the Windows VM and run the following command:

	```
	Unblock-File PATH-TO-AGENT.ZIP
	```

	Where `PATH-TO-AGENT.ZIP` is the full path to the location of the `agent.zip` file on your Windows VM.

1. Install the BOSH Agent with the following command:

	```
	Install-Agent -IaaS vsphere -agentZipPath PATH-TO-AGENT.ZIP
	```

###<a id='openssh'></a>Install OpenSSH

You can use the `bosh ssh` command on BOSH-deployed Windows VMs if you install the OpenSSH dependency on the Windows VM and then enable it during deploy time. This lets an operator enter into a CMD or PowerShell session on the VM as a user with admin privileges.

Perform the following steps to install OpenSSH:

1. Transfer the [`OpenSSH-Win64.zip`](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.2.0p1-Beta) file to the Windows VM and place it in `C:\provision`.
1. Start PowerShell in the Windows VM and run the following command:

	```
	Unblock-File 'C:\provision\OpenSSH-Win64.zip'
	```

1. Install OpenSSH with the following command:

	```
	Install-SSHD -SSHZipFile 'C:\provision\OpenSSH-Win64.zip'
	```

1. When configuring the PAS for Windows tile, you must select the **BETA: Enable BOSH-native SSH support on all VMs checkbox**. For more information, see [Installing and Configuring PAS for Windows](installing.html#config).

###<a id='optimize-compress'></a> Optimize and Compress the Disk

<p class="note"><strong>Note</strong>: Windows Server stemcells can be large, and can exceed the 10GB upload limit imposed by default by the BOSH Director.</p>

Perform the following steps to reduce the stemcell size:

1. Restart the VM.
1. Start PowerShell in the Windows VM and run the following command to use `dism` to clear unnecessary files:

	```
    Optimize-Disk
	```
1. Run the following command to defragment and zero out the disk:

	```
	Compress-Disk
	```

##<a id='sysrep'></a> Step 5: Sysprep the System

This step "syspreps" the system, which ensures that each BOSH VM has a unique identity and applies the appropriate startup configuration at boot time.

The included policies help ensure the uptime and secure operations of the stemcell's VMs, especially when deployed on PCF.

<p class="note"><strong>Note</strong>: This step disables services that could cause restarts, such as Windows Automatic Updates. OS restarts are not supported on BOSH-deployed Windows VMs, and the BOSH Director resurrects the VM by destroying and repaving it.</p>

Perform the following steps:

1. Transfer the [`LGPO.ZIP`](https://www.microsoft.com/en-us/download/details.aspx?id=55319) file to the Windows VM.
1. Start PowerShell in the Windows VM and run the following command:

	```
	Expand-Archive PATH-TO-LGPO.ZIP C:\Windows
	```
1. Run the following command to sysrep the system:

	```
	Invoke-Sysprep -IaaS vsphere
	[-NewPassword PASSWORD]
	[-Owner OWNER] [-Organization ORGANIZATION]
	```

	<p class="note"><strong>Note</strong>: All of the flags of <code>Invoke-Sysprep</code> except for <code>-IaaS</code> are optional.</p>

	Where:
	* `PASSWORD` is an optional flag that enables you to set a password of your choice. Do not use any special character in the password other than `!`. For example, `Example12!` is permitted but `Example#12` is not. This is a known issue.
	* `OWNER` and `ORGANIZATION` are optional flags. Set them if your organization requires it.
	<br><br>
	The sysrep command powers off the VM.

<p class="note warning"><strong>WARNING</strong>: Do not turn the VM back on before completing the procedure in <a href="#export-vmdk">Step 6: Export the VMDK File</a>.</p>

##<a id='export-vmdk'></a> Step 6: Export the VMDK File

Perform the following steps to export the .VMDK file associated with the VM you powered off:

1. In vCenter, right-click the VM and select **Template > Export to OVF Template**.
1. Download the OVA to your local machine.
You do not need to include files in the floppy or CD Drive.
	<p class="note"><strong>Note</strong>: You can also download the standalone vSphere client and select <strong>File > Export > Export OVF Template</strong>.</p>
1. Rename the downloaded OVA file to have a `.tar` extension.
1. Expand the TAR archive and locate the VMDK file.

##<a id='convert-vmdk'></a> Step 7: Convert the VMDK File to a BOSH Stemcell

<p class="note"><strong>Note</strong>: This final step typically takes about ten to twenty minutes to complete.</p>

Perform the following steps to convert the VMDK file to a BOSH stemcell:

1. Download the latest release of the [stembuild](https://github.com/pivotal-cf-experimental/stembuild/releases) utility to your local machine and place the executable in your command-line path.
1. Download [`ovftool`](https://www.vmware.com/support/developer/ovf/) to your local machine and place the executable in your command-line path.
	<p class="note"><strong>Note</strong>: On the Windows desktop, <code>ovftool</code> is installed by default in <code>C:\Program Files\VMware\VMware OVF Tool</code>.</p>

	`stembuild` invokes `ovftool` to convert the disk image to the appropriate stemcell format and apply the proper configuration.
1. Build the stemcell with the following command:

	```
	stembuild package -vmdk PATH-TO-VMDK -stemcell-version STEMCELL-VERSION -os 2016
	```

	Where:
	* `PATH-TO-VMDK` is the path to the VMDK file.
	* `STEMCELL-VERSION` is the 1709 stemcell version you want to build.
	For example, if you downloaded the [BOSH PS Modules and BOSH Agent](https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases) for the 1709.10 release, then specify `1709.10`.

	`stembuild` creates the stemcell in the directory where you execute it. The file has a `.tgz` extension and a name similar to `bosh-stemcell-1709.10-vsphere-esxi-windows2016-go_agent.tgz `.
	<br><br>
	The stemcell is ready for use in conjunction with your BOSH deployment.

##<a id='patch-tuesday'></a> Step 8: Apply Monthly Patch Tuesday Updates

On Patch Tuesday, run Windows Updates on the base image, and then repeat [Step 3: Clone the VM](#clone-vm) through [Step 7: Convert the VMDK File to a BOSH Stemcell](#convert-vmdk).

##<a id='troubleshooting'></a> Troubleshooting

### <a id='windows-features-not-installed'></a>Garden Windows Logs Suggest Windows Features Not Installed

**Symptom**

You see the following error in your `garden-windows` job while deploying Windows 1709:

<pre class="terminal">
Missing required Windows Features:
Web-Webserver, Web-WebSockets, AS-Web-Support,
AS-NET-Framework, Web-WHC, Web-ASP.
Please use the most recent stemcell.
</pre>

**Explanation**

`Install-CFFeatures` might not have run successfully.

**Solution**

Run the following commands in PowerShell on your Windows VM to verify whether `Install-CFFeatures` ran successfully:

```
Get-WindowsFeature "Containers" | Where InstallState -Eq "Installed"
Get-WindowsFeature "Windows-Defender-Features" | Where InstallState -Eq "Removed"
```

### <a id='502-error'></a> Gorouter Returns a 502 Error When Accessing an App

**Symptom**

You cannot access a .NET app externally.
When you attempt to access your app, Gorouter returns an HTTP 502 response status code.
The app does not crash and is still running inside of its container.

**Explanation**

A race condition occurs when one app is deployed to a Diego cell and before it receives
any traffic, a second app is deployed to the same Diego cell.
As a result, the platform mistakenly removes your routing rules for the first app.

**Solution**

To resolve this issue, install Microsoft’s
[KB4074588](https://support.microsoft.com/en-us/help/4074588/windows-10-update-kb4074588) updates
or later on your base Windows VM as described in [Step 2: Install Windows Updates](#install-windows-updates).

Once you install the updates and create your Windows stemcell for vSphere following the instructions in
[Step 3: Clone the VM](#clone-vm) through [Step 7: Convert the VMDK File to a BOSH Stemcell](#convert-vmdk),
deploy the stemcell with PASW.
